library(EcoSimR)
# load data for occurrences of West Indian finches (Fringillidae) on one of
# 19 major islands in the West Indies. Data are from Gotelli and Abele (1982).
data(dataWiFinches)
m_finch = cooc_null_model(dataWiFinches, algo='sim9', metric='c_score')
plot(m_finch, type='cooc')
?cooc_null_model
plot(m_finch, type='hist')
?cooc_null_model
print(m_finch)
summary(m_finch)
source('~/Documents/ASU/teaching/bio 423 - spring 2019/BIO 423 labs/Lab 6 - Community Assembly/Lab 6 Solution.R')
library(primer)
library(deSolve)
library(reshape2)
library(ggplot2)
library(dplyr)
# set the random number generator state
# so that our random numbers come out the same each time
set.seed(1)
# set the number of species
S = 3
# choose a random set of intrinsic growth rates
# uniformly distributed from 0.8 to 1.2
r = rep(1, times=S)
print(r)
# choose competition coefficients normally distributed
# with a mean of 0.01 and a standard deviation of 0.001
A = matrix(rnorm(n=S*S,mean=0.05,sd=0.01),nrow=S,ncol=S)
print(A)
# set the initial abundances of all species to 100
N0 = rep(20, times=S)
# specify the times over which we do the simulation
# here from t=0 to t=50
time = seq(0, 1000, by=0.1)
# run the simulation (the actual math of the Lotka-Volterra
# equations is hidden iin the lvcompg variable, which is
# loaded from the 'primer' package
lv_out <- ode(y=N0, times=time, func=lvcompg, parms=list(r,A))
lv_out_for_plotting = melt(as.data.frame(lv_out),id.vars="time")
# plot the time series, with labels 1-2-3 for each species
ggplot(lv_out_for_plotting,aes(x=time,y=value,col=variable)) +
geom_line() + theme_classic() +
xlab("Time") + ylab("Number of individuals")
A
r
eigen(A)
source('~/Documents/ASU/teaching/bio 423 - spring 2019/BIO 423 labs/Lab 6 - Community Assembly/Lab 6 Solution.R')
source('~/Documents/ASU/teaching/bio 423 - spring 2019/BIO 423 labs/Lab 6 - Community Assembly/Lab 6 Solution.R')
source('~/Documents/ASU/teaching/bio 423 - spring 2019/BIO 423 labs/Lab 6 - Community Assembly/Lab 6 Solution.R')
set.seed(1)
# set the number of species
S = 5
# choose a random set of intrinsic growth rates
# uniformly distributed from 0.8 to 1.2
r = rep(1, times=S)
print(r)
# choose competition coefficients normally distributed
# with a mean of 0.01 and a standard deviation of 0.001
A = matrix(rnorm(n=S*S,mean=0.05,sd=0.01),nrow=S,ncol=S)
print(A)
# set the initial abundances of all species to 100
N0 = rep(20, times=S)
# specify the times over which we do the simulation
# here from t=0 to t=50
time = seq(0, 1000, by=0.1)
# run the simulation (the actual math of the Lotka-Volterra
# equations is hidden iin the lvcompg variable, which is
# loaded from the 'primer' package
lv_out <- ode(y=N0, times=time, func=lvcompg, parms=list(r,A))
lv_out_for_plotting = melt(as.data.frame(lv_out),id.vars="time")
# plot the time series, with labels 1-2-3 for each species
ggplot(lv_out_for_plotting,aes(x=time,y=value,col=variable)) +
geom_line() + theme_classic() +
xlab("Time") + ylab("Number of individuals")
source('~/Documents/ASU/teaching/bio 423 - spring 2019/BIO 423 labs/Lab 6 - Community Assembly/Lab 6 Solution.R')
A_new = A
diag(A_new) = 3*diag(A_new)
lv_out_3x <- ode(y=N0, times=time, func=lvcompg, parms=list(r,A))
lv_out_for_plotting_3x = melt(as.data.frame(lv_out_3x),id.vars="time")
# plot the time series, with labels 1-2-3 for each species
ggplot(lv_out_for_plotting_3x,aes(x=time,y=value,col=variable)) +
geom_line() + theme_classic() +
xlab("Time") + ylab("Number of individuals")
A_new = A
diag(A_new) = 3*diag(A_new)
lv_out_3x <- ode(y=N0, times=time, func=lvcompg, parms=list(r,A_new))
lv_out_for_plotting_3x = melt(as.data.frame(lv_out_3x),id.vars="time")
# plot the time series, with labels 1-2-3 for each species
ggplot(lv_out_for_plotting_3x,aes(x=time,y=value,col=variable)) +
geom_line() + theme_classic() +
xlab("Time") + ylab("Number of individuals")
source('~/Documents/ASU/teaching/bio 423 - spring 2019/BIO 423 labs/Lab 6 - Community Assembly/Lab 6 Solution.R')
source('~/Documents/ASU/teaching/bio 423 - spring 2019/BIO 423 labs/Lab 6 - Community Assembly/Lab 6 Solution.R')
source('~/Documents/ASU/teaching/bio 423 - spring 2019/BIO 423 labs/Lab 6 - Community Assembly/Lab 6 Solution.R')
set.seed(1)
results_untb_sim = untb(start=rep(1,60),
prob=0.004,
gens=500000, # increase # of steps
D=1,
keep=TRUE)
untb_predictions = data.frame(species.table(results_untb_sim))
names(untb_predictions) = paste("Species",1:ncol(untb_predictions))
untb_predictions$time = 1:nrow(untb_predictions)
untb_predictions_for_plotting = melt(untb_predictions, id.vars='time')
ggplot(untb_predictions_for_plotting,aes(x=time,y=value,col=variable)) +
geom_line() +
xlab("Time") + ylab("Abundance") +
facet_wrap(~variable) +
theme_classic()
library(untb)
set.seed(1)
results_untb_sim = untb(start=rep(1,60),
prob=0.004,
gens=500000, # increase # of steps
D=1,
keep=TRUE)
untb_predictions = data.frame(species.table(results_untb_sim))
names(untb_predictions) = paste("Species",1:ncol(untb_predictions))
untb_predictions$time = 1:nrow(untb_predictions)
untb_predictions_for_plotting = melt(untb_predictions, id.vars='time')
ggplot(untb_predictions_for_plotting,aes(x=time,y=value,col=variable)) +
geom_line() +
xlab("Time") + ylab("Abundance") +
facet_wrap(~variable) +
theme_classic()
source('~/Documents/ASU/teaching/bio 423 - spring 2019/BIO 423 labs/Lab 6 - Community Assembly/Lab 6 Solution.R')
library(untb)
set.seed(1)
results_untb_sim = untb(start=rep(1,60),
prob=0.002,
gens=200000, # increase # of steps
D=1,
keep=TRUE)
untb_predictions = data.frame(species.table(results_untb_sim))
names(untb_predictions) = paste("Species",1:ncol(untb_predictions))
untb_predictions$time = 1:nrow(untb_predictions)
untb_predictions_for_plotting = melt(untb_predictions, id.vars='time')
ggplot(untb_predictions_for_plotting,aes(x=time,y=value,col=variable)) +
geom_line() +
xlab("Time") + ylab("Abundance") +
facet_wrap(~variable) +
theme_classic()
source('~/Documents/ASU/teaching/bio 423 - spring 2019/BIO 423 labs/Lab 6 - Community Assembly/Lab 6 Solution.R')
untb_predictions[,1]
plot(untb_predictions[,1])
source('~/Documents/ASU/teaching/bio 423 - spring 2019/BIO 423 labs/Lab 6 - Community Assembly/Lab 6 Solution.R')
source('~/Documents/ASU/teaching/bio 423 - spring 2019/BIO 423 labs/Lab 6 - Community Assembly/Lab 6 Solution.R')
set.seed(1)
results_untb_sim = untb(start=rep(1,60),
prob=0.004,
gens=10000, # increase # of steps
D=1,
keep=TRUE)
untb_predictions = data.frame(species.table(results_untb_sim))
names(untb_predictions) = paste("Species",1:ncol(untb_predictions))
untb_predictions$time = 1:nrow(untb_predictions)
untb_predictions_for_plotting = melt(untb_predictions, id.vars='time')
ggplot(untb_predictions_for_plotting,aes(x=time,y=value,col=variable)) +
geom_line() +
xlab("Time") + ylab("Abundance") +
facet_wrap(~variable) +
theme_classic()
s
# 8. A
set.seed(1)
results_untb_sim = untb(start=rep(1,60),
prob=0.004,
gens=20000, # increase # of steps
D=1,
keep=TRUE)
untb_predictions = data.frame(species.table(results_untb_sim))
names(untb_predictions) = paste("Species",1:ncol(untb_predictions))
untb_predictions$time = 1:nrow(untb_predictions)
untb_predictions_for_plotting = melt(untb_predictions, id.vars='time')
ggplot(untb_predictions_for_plotting,aes(x=time,y=value,col=variable)) +
geom_line() +
xlab("Time") + ylab("Abundance") +
facet_wrap(~variable) +
theme_classic()
source('~/Documents/ASU/teaching/bio 423 - spring 2019/BIO 423 labs/Lab 6 - Community Assembly/Lab 6 Solution.R')
richness_untb
set.seed(1)
results_untb_sim = untb(start=rep(1,60),
prob=0.002,
gens=200000, # increase # of steps
D=1,
keep=TRUE)
untb_predictions = data.frame(species.table(results_untb_sim))
names(untb_predictions) = paste("Species",1:ncol(untb_predictions))
untb_predictions$time = 1:nrow(untb_predictions)
untb_predictions_for_plotting = melt(untb_predictions, id.vars='time')
ggplot(untb_predictions_for_plotting,aes(x=time,y=value,col=variable)) +
geom_line() +
xlab("Time") + ylab("Abundance") +
facet_wrap(~variable) +
theme_classic()
# 8.
richness_untb = data.frame(time=untb_predictions$time,
species_richness=rowSums(untb_predictions[,1:(ncol(untb_predictions)-1)] > 0)
)
str(richness_untb)
mean(richness_untb$species_richness)
sd(richness_untb$species_richness)
source('~/Documents/ASU/teaching/bio 423 - spring 2019/BIO 423 labs/Lab 6 - Community Assembly/Lab 6 Solution.R')
source('~/Documents/ASU/teaching/bio 423 - spring 2019/BIO 423 labs/Lab 6 - Community Assembly/Lab 6 Solution.R')
library(EcoSimR)
data(dataWiFinches)
m_finch = cooc_null_model(dataWiFinches,
algo='sim9',
metric='c_score',
suppressProg=TRUE,
nReps=1000)
summary(m_finch)
data(dataMacWarb)
m_warb = cooc_null_model(dataMacWarb,
algo='sim9',
metric='c_score',
suppressProg=TRUE,
nReps=1000)
summary(m_warb)
mean(richness_untb$species_richness)dataMacWarb
dataMacWarb
?sim9
source('~/Documents/ASU/teaching/bio 423 - spring 2019/BIO 423 labs/Lab 6 - Community Assembly/Lab 6 Solution.R')
source('~/Documents/ASU/teaching/bio 423 - spring 2019/BIO 423 labs/Lab 6 - Community Assembly/Lab 6 Solution.R')
