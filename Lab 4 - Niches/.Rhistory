data_warblers <- read.csv(file="dataMacWarb.csv")
timePosition6 = data.frame(Time.6=data_warblers$X6)
data_warblers$SumPercentPosition6 = apply(X=timePosition6, MARGIN=1, FUN=sum)
data_warblers$SumPercentPosition6
data_warblers
# which species has the most variable resource use?
apply(data_warblers[,2:17],1,var)
data_warblers[,c("Species","ResourceUseVariability")]
data_warblers = read.csv(file="dataMacWarb.csv")
# which species has the most variable resource use?
data_warblers$ResourceUseVariability = apply(data_warblers[,2:17],1,var)
data_warblers[,c("Species","ResourceUseVariability")]
data_warblers$ResourceUseVariability = apply(data_warblers[,2:17],1,sd)
data_warblers[,c("Species","ResourceUseVariability")]
# the Cape May warbler has the most variation in resource use (170)
names(data_warblers
)
# which species spends the most time at the branch tips?
timeTips = data_warblers[,c("X1T","X2T","X3T","X4T","X5T")]
data_warblers$SumTips = apply(X=timeTips,1,sum)
data_warblers[,c("Species","SumTips")]
data_transposed = as.matrix(t(data_warblers[,2:17]))
str(data_transposed)
dimnames(data_transposed)[[2]] =  data_warblers$Species
warbler_similarity = cor(data_transposed)
warbler_similarity_melted = melt(warbler_similarity)
library(reshape2)
warbler_similarity_melted
data_transposed = as.matrix(t(data_warblers[,2:17]))
str(data_transposed)
dimnames(data_transposed)[[2]] =  data_warblers$Species
warbler_similarity = cor(data_transposed)
warbler_similarity_melted = melt(warbler_similarity)
warbler_similarity_melted
which.max(warbler_similarity_melted$value)
# remove main diagonal entries
warbler_similarity_melted = warbler_similarity_melted[warbler_similarity_melted$Var1!=warbler_similarity_melted$Var2,]
which.max(warbler_similarity_melted$value)warbler_similarity_melted
warbler_similarity_melted
warbler_similarity_melted[which.max(warbler_similarity_melted$value),]
# 0.16 * pi / 180 * 6371 km) = 18 km at the equator.
raster_mat = raster('wc2.0_bio_10m_01.tif')
# we divide by ten to convert values into
# degrees Celsius - they are stored as multiples to save memory in the raw file.
raster_mat = raster_mat / 10
# the below data is the BIO_12 variable (annual precipitation, in mm) at the same resolution.
raster_ap = raster('wc2.0_bio_10m_12.tif')
library(raster) # if this produces an error, install the 'raster' package in Rstudio
# the below data is the BIO_01 variable (mean annual temp, in 10 x °C) 10 at 10 arc-minute resolution
# 10 arc-minutes is equal to 0.16 degrees, or using the formula arc length = radius * angle,
# 0.16 * pi / 180 * 6371 km) = 18 km at the equator.
raster_mat = raster('wc2.0_bio_10m_01.tif')
# we divide by ten to convert values into
# degrees Celsius - they are stored as multiples to save memory in the raw file.
raster_mat = raster_mat / 10
# the below data is the BIO_12 variable (annual precipitation, in mm) at the same resolution.
raster_ap = raster('wc2.0_bio_10m_12.tif')
raster_ap
raster_ap
plot(raster_ap
)
plot(stack(MAT=raster_mat,AP=raster_ap))
knitr::opts_chunk$set(echo = TRUE)
plot(stack(raster_mat,raster_ap))
library(raster) # if this produces an error, install the 'raster' package in Rstudio
# the below data is the BIO_01 variable (mean annual temp, in 10 x °C) 10 at 10 arc-minute resolution
# 10 arc-minutes is equal to 0.16 degrees, or using the formula arc length = radius * angle,
# 0.16 * pi / 180 * 6371 km) = 18 km at the equator.
raster_mat = raster('wc2.0_bio_10m_01.tif')
# we divide by ten to convert values into
# degrees Celsius - they are stored as multiples to save memory in the raw file.
raster_mat = raster_mat / 10
raster_mat
# the below data is the BIO_12 variable (annual precipitation, in mm) at the same resolution.
raster_ap = raster('wc2.0_bio_10m_12.tif')
raster_ap
plot(stack(raster_mat,raster_ap))
library(raster) # if this produces an error, install the 'raster' package in Rstudio
# the below data is the BIO_01 variable (mean annual temp, in °C) 10 at 10 arc-minute resolution
# 10 arc-minutes is equal to 0.16 degrees, or using the formula arc length = radius * angle,
# 0.16 * pi / 180 * 6371 km) = 18 km at the equator.
raster_mat = raster('wc2.0_bio_10m_01.tif')
raster_mat
# the below data is the BIO_12 variable (annual precipitation, in mm) at the same resolution.
raster_ap = raster('wc2.0_bio_10m_12.tif')
raster_ap
plot(stack(raster_mat,raster_ap))
plot(stack(raster_mat,raster_ap),col=rainbow(100))
plot(stack(raster_mat,raster_ap),col=rainbow(100))
?rainbow
library(raster) # if this produces an error, install these packages in Rstudio
library(maps)
# the below data is the BIO_01 variable (mean annual temp, in °C) 10 at 10 arc-minute resolution
# 10 arc-minutes is equal to 0.16 degrees, or using the formula arc length = radius * angle in radians,
# we get 0.16 * pi / 180 * 6371 km) = 18 km at the equator.
raster_mat = raster('wc2.0_bio_10m_01.tif')
raster_mat
# the below data is the BIO_12 variable (annual precipitation, in mm) at the same resolution.
raster_ap = raster('wc2.0_bio_10m_12.tif')
raster_ap
plot(stack(raster_mat,raster_ap))
```
Next, we can load in our information on species occurrences. We will specifically be comparing two closely-related oak species, \it{Quercus rubra} and \it{Quercus alba}.
```{r getocc}
data_oaks = read.csv("oak_distribution.csv")
str(data_oaks)
# draw a base map for the USA
usa <- map_data("usa")
# note how we are building a multi-layer ggplot here
ggplot() +
geom_polygon(data = usa, aes(x=long, y = lat, group = group)) +
geom_point(data = data_oaks,aes(x=Longitude,y=Latitude,col=Species))
install.packages("maps")
library(raster) # if this produces an error, install these packages in Rstudio
library(maps)
library(ggplot2)
# the below data is the BIO_01 variable (mean annual temp, in °C) 10 at 10 arc-minute resolution
# 10 arc-minutes is equal to 0.16 degrees, or using the formula arc length = radius * angle in radians,
# we get 0.16 * pi / 180 * 6371 km) = 18 km at the equator.
raster_mat = raster('wc2.0_bio_10m_01.tif')
raster_mat
# the below data is the BIO_12 variable (annual precipitation, in mm) at the same resolution.
raster_ap = raster('wc2.0_bio_10m_12.tif')
raster_ap
plot(stack(raster_mat,raster_ap))
```
Next, we can load in our information on species occurrences. We will specifically be comparing two closely-related oak species, \it{Quercus rubra} and \it{Quercus alba}.
```{r getocc}
data_oaks = read.csv("oak_distribution.csv")
str(data_oaks)
# draw a base map for the USA
usa <- map_data("usa")
# note how we are building a multi-layer ggplot here
ggplot() +
geom_polygon(data = usa, aes(x=long, y = lat, group = group)) +
geom_point(data = data_oaks,aes(x=Longitude,y=Latitude,col=Species))
?geom_raster
ggplot() + geom_raster(raster_ap)
ggplot() + geom_raster(raster_ap,aes(x=x,y=y))
ggplot() + geom_raster(data=raster_ap,aes(x=x,y=y))
plot(raster_mat)
points(lat~lon,data=data_oaks)
plot(raster_mat)
points(Latitude~Longitude,data=data_oaks,pch=data_oaks$Species)
plot(raster_mat)
points(Latitude~Longitude,data=data_oaks,pch=as.numeric(data_oaks$Species))
plot(raster_mat)
points(Latitude~Longitude,data=data_oaks,pch=as.numeric(data_oaks$Species),cex=0.1)
?geom_raster
ggplot(raster_mat) + geom_tile()
gplot(raster_mat) + geom_tile()
library(rasterVis)
install.packages("rasterVis")
library(rasterVis)
ggplot(raster_mat) + geom_tile()
gplot(raster_mat) + geom_tile()
gplot(raster_mat) + geom_tile(fill=factor(value))
gplot(raster_mat) + geom_tile(aes(fill=factor(value)))
gplot(raster_mat) + geom_tile(aes(fill=value))
gplot(raster_mat) +
geom_tile(aes(fill=value)) +
geom_point(data = data_oaks,aes(x=Longitude,y=Latitude,col=Species),alpha=0.5,size=0.1)
gplot(raster_mat) +
geom_tile(aes(fill=value)) +
geom_point(data = data_oaks,aes(x=Longitude,y=Latitude,col=Species),alpha=0.5,size=0.1) +
xlim(-150,0) + ylim(10,60)
gplot(raster_mat) +
geom_tile(aes(fill=value)) +
geom_point(data = data_oaks,aes(x=Longitude,y=Latitude,col=Species),alpha=0.5,size=0.1) +
xlim(-150,0) + ylim(10,60) + coord_equal()
gplot(raster_mat) +
geom_tile(aes(fill=value)) +
geom_point(data = data_oaks,aes(x=Longitude,y=Latitude,col=Species),alpha=0.5,size=0.1) +
geom_polygon(data = usa, aes(x=long, y = lat, group = group)) +
xlim(-150,-50) + ylim(10,60) + coord_equal()
gplot(raster_mat) +
geom_tile(aes(fill=value)) + scale_color_brewer(palette="Spectral")
?scale_color_brewer
gplot(raster_mat) +
geom_tile(aes(fill=value)) + scale_fill_brewer(palette="Spectral")
gplot(raster_mat) +
geom_tile(aes(fill=value)) + scale_fill_brewer(palette="Spectral")
gplot(raster_mat) +
geom_tile(aes(fill=value)) + scale_color_brewer(palette="Spectral")
?scale_fill_continuous
gplot(raster_mat) +
geom_tile(aes(fill=value)) + scale_fill_continuous(type='viridis')
gplot(raster_ap) +
geom_tile(aes(fill=value),name='AP') + scale_fill_continuous(type='viridis')
tapply(data_oaks$Mean.Annual.Temperature, data_oaks$Species, mean)
str(data_oaks
)
# extract values from the raster
# to extract values we need to pass in a set of x-y coordinates - here, longitude, and latitude
data_oaks$Mean.Annual.Temperature = extract(raster_mat, data_oaks[,c("Longitude","Latitude")])
data_oaks$Annual.Precipitation = extract(raster_ap, data_oaks[,c("Longitude","Latitude")])
tapply(data_oaks$Mean.Annual.Temperature, data_oaks$Species, mean)
ggplot(data_oaks,aes(x=Mean.Annual.Temperature,col=Species)) + geom_density()
ggplot(data_oaks,aes(x=Mean.Annual.Temperature,fill=Species)) +
geom_density(alpha=0.5) +
theme_minimal() +
xlab("Mean annual temperature °C") + ylab("Probability")
ggplot(data_oaks,aes(x=Mean.Annual.Temperature,fill=Species)) +
geom_histogram(alpha=0.5) +
theme_minimal() +
xlab("Mean annual temperature °C") + ylab("Frequency")
ggplot(data_oaks,aes(x=Mean.Annual.Temperature,fill=Species)) +
geom_histogram(alpha=0.5,bins=50) +
theme_minimal() +
xlab("Mean annual temperature °C") + ylab("Frequency")
ggplot(data_oaks,aes(x=Mean.Annual.Temperature,fill=Species)) +
geom_histogram(alpha=0.5,binwidth=1) +
theme_minimal() +
xlab("Mean annual temperature °C") + ylab("Frequency")
wilcox.test(Mean.Annual.Temperature~Species,data=data_oaks)
t.test(Mean.Annual.Temperature~Species,data=data_oaks)
ggplot(data_oaks,aes(x=Mean.Annual.Temperature,y=Annual.Precipitation,col=Speces)) +
geom_density_2d()
ggplot(data_oaks,aes(x=Mean.Annual.Temperature,y=Annual.Precipitation,col=Species)) +
geom_density_2d()
ggplot(data_oaks,aes(x=Mean.Annual.Temperature,y=Annual.Precipitation,col=Species)) +
geom_density_2d() +
theme_minimal()
ggplot(data_oaks,aes(x=Mean.Annual.Temperature,y=Annual.Precipitation,fill=Species)) +
geom_density_2d(alpha=0.5) +
theme_minimal()
ggplot(data_oaks,aes(x=Mean.Annual.Temperature,y=Annual.Precipitation,aes(fill = stat(level)))) +
geom_density_2d(alpha=0.5) +
theme_minimal()
# visualized as two-dimensional density plot
ggplot(data_oaks,aes(x=Mean.Annual.Temperature,y=Annual.Precipitation,col=species)) +
geom_density_2d(alpha=0.5) +
theme_minimal()
ggplot(data_oaks,aes(x=Mean.Annual.Temperature,y=Annual.Precipitation,col=Species)) +
geom_density_2d(alpha=0.5) +
theme_minimal()
# visualized as two-dimensional density plot
ggplot(data_oaks,aes(x=Mean.Annual.Temperature,y=Annual.Precipitation,col=Species)) +
geom_density_2d(alpha=0.5,aes(fill = stat(level))) +
theme_minimal()
ggplot(data_oaks,aes(x=Mean.Annual.Temperature,y=Annual.Precipitation,col=Species)) +
geom_density_2d(alpha=0.5) +
theme_minimal()
ggplot(data_oaks,aes(x=Mean.Annual.Temperature,y=Annual.Precipitation,col=Species)) +
facet_wrap(~Species)
geom_density_2d(alpha=0.5) +
theme_minimal()
ggplot(data_oaks,aes(x=Mean.Annual.Temperature,y=Annual.Precipitation)) +
facet_wrap(~Species) +
geom_density_2d(alpha=0.5) +
theme_minimal()
ggplot(data_oaks,aes(x=Mean.Annual.Temperature,y=Annual.Precipitation)) +
facet_wrap(~Species) +
geom_density_2d(aes(fill = stat(level)), geom = "polygon") +
theme_minimal()
ggplot(data_oaks,aes(x=Mean.Annual.Temperature,y=Annual.Precipitation,col=Species)) +
geom_density_2d(alpha=0.5) +
theme_minimal()
ggplot(data_oaks,aes(x=Mean.Annual.Temperature,y=Annual.Precipitation,col=Species)) +
geom_density_2d(alpha=0.5,size=2) +
theme_minimal()
tapply(data_oaks$Annual.Precipitation, data_oaks$Species, mean)
# Quercus alba (1501 mm) but only just barely
t.test(Annual.Precipitation~Species,data=data_oaks)
# which species has a broader temperature niche?
tapply(data_oaks$Mean.Annual.Temperature, data_oaks$Species, sd)
# which species has a broader temperature niche?
tapply(data_oaks$Mean.Annual.Temperature, data_oaks$Species, range)
# which species has a broader temperature niche?
tapply(data_oaks$Mean.Annual.Temperature, data_oaks$Species, max)
tapply(data_oaks$Mean.Annual.Temperature, data_oaks$Species, min)
